{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendon Nguyen\\\\Desktop\\\\T10Code\\\\Team10\\\\GradeView_Course\\\\frontend\\\\src\\\\components\\\\WeightEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../App';\n\n// Define the API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nconst WeightEditor = ({\n  courseId,\n  weightId,\n  assessmentType,\n  weightPercentage,\n  onSave,\n  onCancel,\n  onWeightUpdate\n}) => {\n  _s();\n  const {\n    userId\n  } = useContext(UserContext);\n  const [weight, setWeight] = useState(weightPercentage);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  // Update local weight state when prop changes\n  useEffect(() => {\n    console.log('WeightEditor: weightPercentage prop changed', {\n      weightId,\n      assessmentType,\n      weightPercentage\n    });\n    setWeight(weightPercentage);\n  }, [weightPercentage, weightId, assessmentType]);\n  const handleSave = async () => {\n    if (weight < 0 || weight > 100) {\n      setError('Weight must be between 0 and 100');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      const numericWeightId = parseInt(weightId, 10);\n      console.log('Updating weight:', {\n        courseId,\n        weightId: numericWeightId,\n        assessmentType,\n        oldWeight: weightPercentage,\n        newWeight: parseFloat(weight),\n        change: parseFloat(weight) - weightPercentage\n      });\n      const response = await fetch(`${API_BASE_URL}/api/courses/${courseId}/weights`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-user-id': userId\n        },\n        body: JSON.stringify({\n          updates: [{\n            id: numericWeightId,\n            assessmentType: assessmentType,\n            newWeight: parseFloat(weight)\n          }]\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update weight');\n      }\n      const data = await response.json();\n      console.log('Weight updated successfully:', {\n        courseId,\n        weightId: numericWeightId,\n        assessmentType,\n        oldWeight: weightPercentage,\n        newWeight: parseFloat(weight),\n        change: parseFloat(weight) - weightPercentage,\n        responseGrade: data.grade\n      });\n\n      // Call onWeightUpdate to update parent component with the new weight\n      onWeightUpdate(parseFloat(weight));\n\n      // Trigger a refresh of the course data without collapsing the course\n      const event = new CustomEvent('refreshCourse', {\n        detail: {\n          courseId,\n          preserveOpenState: true // Add a flag to preserve the open state\n        }\n      });\n      window.dispatchEvent(event);\n\n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n\n      // Don't call onSave to keep the editor open\n      // This allows the user to see the updated weight and continue editing if needed\n    } catch (err) {\n      console.error('Error updating weight:', err);\n      setError(err.message || 'Failed to update weight');\n    } finally {\n      setSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weight-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Edit \", assessmentType, \" Weight\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-editor-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          disabled: loading || saving,\n          children: saving ? 'Saving...' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: onCancel,\n          disabled: loading || saving,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"weight-input\",\n        children: \"Weight Percentage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"weight-input\",\n        type: \"number\",\n        min: \"0\",\n        max: \"100\",\n        step: \"0.1\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        className: \"weight-input\",\n        disabled: loading || saving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"weight-percent\",\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightEditor, \"n5wYyAtU7p+CeUrxKuMWWdsmJWE=\");\n_c = WeightEditor;\nexport default WeightEditor;\nvar _c;\n$RefreshReg$(_c, \"WeightEditor\");","map":{"version":3,"names":["React","useState","useContext","useEffect","axios","UserContext","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","WeightEditor","courseId","weightId","assessmentType","weightPercentage","onSave","onCancel","onWeightUpdate","_s","userId","weight","setWeight","error","setError","loading","setLoading","saving","setSaving","console","log","handleSave","numericWeightId","parseInt","oldWeight","newWeight","parseFloat","change","response","fetch","method","headers","body","JSON","stringify","updates","id","ok","errorData","json","Error","message","data","responseGrade","grade","event","CustomEvent","detail","preserveOpenState","window","dispatchEvent","courseListEvent","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","type","min","max","step","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Brendon Nguyen/Desktop/T10Code/Team10/GradeView_Course/frontend/src/components/WeightEditor.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../App';\r\n\r\n// Define the API base URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\nconst WeightEditor = ({ courseId, weightId, assessmentType, weightPercentage, onSave, onCancel, onWeightUpdate }) => {\r\n  const { userId } = useContext(UserContext);\r\n  const [weight, setWeight] = useState(weightPercentage);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // Update local weight state when prop changes\r\n  useEffect(() => {\r\n    console.log('WeightEditor: weightPercentage prop changed', { \r\n      weightId, \r\n      assessmentType, \r\n      weightPercentage \r\n    });\r\n    setWeight(weightPercentage);\r\n  }, [weightPercentage, weightId, assessmentType]);\r\n\r\n  const handleSave = async () => {\r\n    if (weight < 0 || weight > 100) {\r\n      setError('Weight must be between 0 and 100');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const numericWeightId = parseInt(weightId, 10);\r\n      console.log('Updating weight:', { \r\n        courseId, \r\n        weightId: numericWeightId, \r\n        assessmentType,\r\n        oldWeight: weightPercentage,\r\n        newWeight: parseFloat(weight),\r\n        change: parseFloat(weight) - weightPercentage\r\n      });\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/api/courses/${courseId}/weights`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-user-id': userId\r\n        },\r\n        body: JSON.stringify({\r\n          updates: [{\r\n            id: numericWeightId,\r\n            assessmentType: assessmentType,\r\n            newWeight: parseFloat(weight)\r\n          }]\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update weight');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Weight updated successfully:', {\r\n        courseId,\r\n        weightId: numericWeightId,\r\n        assessmentType,\r\n        oldWeight: weightPercentage,\r\n        newWeight: parseFloat(weight),\r\n        change: parseFloat(weight) - weightPercentage,\r\n        responseGrade: data.grade\r\n      });\r\n      \r\n      // Call onWeightUpdate to update parent component with the new weight\r\n      onWeightUpdate(parseFloat(weight));\r\n      \r\n      // Trigger a refresh of the course data without collapsing the course\r\n      const event = new CustomEvent('refreshCourse', { \r\n        detail: { \r\n          courseId,\r\n          preserveOpenState: true // Add a flag to preserve the open state\r\n        } \r\n      });\r\n      window.dispatchEvent(event);\r\n      \r\n      // Also trigger a refresh of the course list to update the overall grade\r\n      const courseListEvent = new CustomEvent('refreshCourseList');\r\n      window.dispatchEvent(courseListEvent);\r\n      \r\n      // Don't call onSave to keep the editor open\r\n      // This allows the user to see the updated weight and continue editing if needed\r\n    } catch (err) {\r\n      console.error('Error updating weight:', err);\r\n      setError(err.message || 'Failed to update weight');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"weight-editor\">\r\n      <div className=\"weight-editor-header\">\r\n        <h4>Edit {assessmentType} Weight</h4>\r\n        <div className=\"weight-editor-actions\">\r\n          <button \r\n            className=\"save-button\" \r\n            onClick={handleSave} \r\n            disabled={loading || saving}\r\n          >\r\n            {saving ? 'Saving...' : 'Save'}\r\n          </button>\r\n          <button \r\n            className=\"cancel-button\" \r\n            onClick={onCancel}\r\n            disabled={loading || saving}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <div className=\"weight-input-container\">\r\n        <label htmlFor=\"weight-input\">Weight Percentage:</label>\r\n        <input\r\n          id=\"weight-input\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          step=\"0.1\"\r\n          value={weight}\r\n          onChange={(e) => setWeight(e.target.value)}\r\n          className=\"weight-input\"\r\n          disabled={loading || saving}\r\n        />\r\n        <span className=\"weight-percent\">%</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeightEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}