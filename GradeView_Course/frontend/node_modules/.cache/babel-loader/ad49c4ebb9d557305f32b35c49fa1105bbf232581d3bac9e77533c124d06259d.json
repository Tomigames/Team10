{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendon Nguyen\\\\Desktop\\\\T10Code\\\\Team10\\\\GradeView_Course\\\\frontend\\\\src\\\\components\\\\TranscriptDownloader.jsx\",\n  _s = $RefreshSig$();\n// src/components/TranscriptDownloader.js\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { api } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptDownloader = ({\n  userId\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleDownloadTranscript = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log(\"Attempting to download transcript for user:\", userId);\n\n      // Request the PDF from the backend\n      const response = await api.get(`/api/users/${userId}/generate-transcript`, {\n        headers: {\n          'x-user-id': userId.toString() // Ensure userId is sent as a string\n        },\n        responseType: 'blob' // Important: This tells axios to handle the response as a binary blob\n      });\n\n      // Check if we got a valid response\n      if (!response.data || response.data.size === 0) {\n        throw new Error(\"Received empty PDF data\");\n      }\n\n      // Create a URL for the blob\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a link and trigger download\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `transcript_user_${userId}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Error downloading transcript:', err);\n\n      // Improved error handling\n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        // The request was made but no response was received\n        setError('No response from server. Please check your network connection.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadTranscript,\n      disabled: isLoading,\n      className: \"btn btn-success\",\n      children: isLoading ? 'Generating PDF...' : 'Download Transcript'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TranscriptDownloader, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = TranscriptDownloader;\nexport default TranscriptDownloader;\nvar _c;\n$RefreshReg$(_c, \"TranscriptDownloader\");","map":{"version":3,"names":["React","useState","motion","api","jsxDEV","_jsxDEV","TranscriptDownloader","userId","_s","isLoading","setIsLoading","error","setError","handleDownloadTranscript","console","log","response","get","headers","toString","responseType","data","size","Error","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","revokeObjectURL","removeChild","err","status","request","message","children","onClick","disabled","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brendon Nguyen/Desktop/T10Code/Team10/GradeView_Course/frontend/src/components/TranscriptDownloader.jsx"],"sourcesContent":["// src/components/TranscriptDownloader.js\r\nimport React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { api } from '../App';\r\n\r\nconst TranscriptDownloader = ({ userId }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const handleDownloadTranscript = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log(\"Attempting to download transcript for user:\", userId);\r\n      \r\n      // Request the PDF from the backend\r\n      const response = await api.get(`/api/users/${userId}/generate-transcript`, {\r\n        headers: { \r\n          'x-user-id': userId.toString() // Ensure userId is sent as a string\r\n        },\r\n        responseType: 'blob' // Important: This tells axios to handle the response as a binary blob\r\n      });\r\n      \r\n      // Check if we got a valid response\r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error(\"Received empty PDF data\");\r\n      }\r\n      \r\n      // Create a URL for the blob\r\n      const blob = new Blob([response.data], { type: 'application/pdf' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      \r\n      // Create a link and trigger download\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `transcript_user_${userId}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      \r\n      // Clean up\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error('Error downloading transcript:', err);\r\n      \r\n      // Improved error handling\r\n      if (err.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setError(`Server error: ${err.response.status} - ${err.response.data.error || 'Unknown error'}`);\r\n      } else if (err.request) {\r\n        // The request was made but no response was received\r\n        setError('No response from server. Please check your network connection.');\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setError(`Error: ${err.message}`);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={handleDownloadTranscript}\r\n        disabled={isLoading}\r\n        className=\"btn btn-success\"\r\n      >\r\n        {isLoading ? 'Generating PDF...' : 'Download Transcript'}\r\n      </button>\r\n      \r\n      {error && (\r\n        <div className=\"alert alert-danger mt-2\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranscriptDownloader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}