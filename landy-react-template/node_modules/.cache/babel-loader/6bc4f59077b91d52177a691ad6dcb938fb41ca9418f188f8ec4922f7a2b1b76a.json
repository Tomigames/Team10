{"ast":null,"code":"var _jsxFileName = \"/Users/rizvydanish/Desktop/Team10-main/landy-react-template/src/pages/Course.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// course.jsx\nimport React, { useState, useEffect, createContext, useContext, useCallback, useRef, useMemo } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronDown, ChevronUp } from 'lucide-react';\nimport WeightEditor from './components/WeightEditor';\nimport AssessmentList from './components/AssessmentList';\nimport { calculateSectionAverage, calculateOverallGrade, getGradeColor } from './utils/gradeCalculations';\nimport { UserContext } from './UserContext';\nimport './App.css';\n\n/* ------------ API Helper ------------ */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE || 'http://localhost:5050',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include userId in headers\napi.interceptors.request.use(config => {\n  const userId = localStorage.getItem('userId');\n  if (userId) {\n    config.headers['x-user-id'] = userId;\n  }\n  return config;\n});\n\n/* ------------ Course Listing & Details ------------ */\nconst AssessmentItem = ({\n  a\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"assessment-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    children: [a.AssessmentName, \":\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: a.IndividualGrade != null ? `${a.IndividualGrade}%` : 'N/A'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n_c = AssessmentItem;\nconst WeightSection = ({\n  courseId,\n  weightId,\n  weightPercentage,\n  assessmentType,\n  assessments = [],\n  onWeightUpdate\n}) => {\n  _s();\n  const {\n    userId\n  } = useContext(UserContext);\n  const [editing, setEditing] = useState(false);\n  const [currentWeight, setCurrentWeight] = useState(weightPercentage);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const lastRefreshTime = useRef(0);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  // Update currentWeight when weightPercentage prop changes\n  useEffect(() => {\n    console.log('WeightSection: weightPercentage prop changed', {\n      courseId,\n      weightId,\n      assessmentType,\n      weightPercentage\n    });\n    setCurrentWeight(weightPercentage);\n  }, [weightPercentage, courseId, weightId, assessmentType]);\n\n  // Calculate section average\n  const sectionAverage = useMemo(() => {\n    const avg = calculateSectionAverage(assessments);\n    // Ensure the result is a number\n    return isNaN(avg) ? 0 : avg;\n  }, [assessments]);\n  const handleWeightUpdate = async newWeight => {\n    setCurrentWeight(newWeight);\n    onWeightUpdate(newWeight);\n\n    // Trigger a refresh of the course data\n    const now = Date.now();\n    if (now - lastRefreshTime.current > 1000) {\n      lastRefreshTime.current = now;\n      const event = new CustomEvent('refreshCourse', {\n        detail: {\n          courseId\n        }\n      });\n      window.dispatchEvent(event);\n\n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    }\n  };\n  const handleAssessmentChange = () => {\n    // Only refresh if it's been more than 1 second since the last refresh\n    const now = Date.now();\n    if (now - lastRefreshTime.current > 1000) {\n      lastRefreshTime.current = now;\n      const event = new CustomEvent('refreshCourse', {\n        detail: {\n          courseId\n        }\n      });\n      window.dispatchEvent(event);\n\n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    }\n  };\n  const handleSave = async () => {\n    // Don't close the editor after saving\n    // This allows the user to see the updated weight and continue editing if needed\n  };\n  const handleDeleteWeight = async () => {\n    try {\n      await api.delete(`/api/courses/${courseId}/weights`, {\n        data: {\n          assessmentType\n        },\n        headers: {\n          'x-user-id': userId\n        }\n      });\n\n      // Trigger a refresh of the course data\n      const event = new CustomEvent('refreshCourse', {\n        detail: {\n          courseId\n        }\n      });\n      window.dispatchEvent(event);\n\n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    } catch (err) {\n      console.error('Failed to delete weight', err);\n      setError('Failed to delete weight');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weight-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-header\",\n      onClick: () => !editing && setEditing(true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weight-type\",\n          children: assessmentType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weight-percentage\",\n          children: [\"(\", currentWeight, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"section-average\",\n          children: [\"Average: \", typeof sectionAverage === 'number' ? sectionAverage.toFixed(1) : '0.0', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-weight-button\",\n          onClick: () => setEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-weight-button\",\n          onClick: e => {\n            e.stopPropagation();\n            setConfirmDelete(true);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), confirmDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this assessment type and all its assessments?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteWeight,\n          children: \"Yes, Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setConfirmDelete(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), editing && /*#__PURE__*/_jsxDEV(WeightEditor, {\n      courseId: courseId,\n      weightId: weightId,\n      assessmentType: assessmentType,\n      weightPercentage: currentWeight,\n      onSave: handleSave,\n      onCancel: () => setEditing(false),\n      onWeightUpdate: handleWeightUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: editing && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          height: 0,\n          opacity: 0\n        },\n        animate: {\n          height: 'auto',\n          opacity: 1\n        },\n        exit: {\n          height: 0,\n          opacity: 0\n        },\n        className: \"assessment-list\",\n        children: /*#__PURE__*/_jsxDEV(AssessmentList, {\n          courseId: courseId,\n          weightId: weightId,\n          assessmentType: assessmentType,\n          assessments: assessments,\n          onAssessmentChange: handleAssessmentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightSection, \"6FwFmX5hh6Z5uRILJSDHckETmxc=\");\n_c2 = WeightSection;\nconst CourseItem = ({\n  c,\n  onDelete,\n  onEdit\n}) => {\n  _s2();\n  const [open, setOpen] = useState(false);\n  const [assessments, setAssessments] = useState([]);\n  const [weights, setWeights] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    userId\n  } = useContext(UserContext);\n  const fetchRef = useRef();\n  const [initialFetchDone, setInitialFetchDone] = useState(false);\n\n  // ─── ADD WEIGHT STATE & HANDLERS ────────────────────────────────────────────\n  const [addingWeight, setAddingWeight] = useState(false);\n  const [newAssessmentType, setNewAssessmentType] = useState('');\n  const [newWeightPercentage, setNewWeightPercentage] = useState('');\n  const handleAddWeightSave = async () => {\n    try {\n      await api.post(`/api/courses/${c.CourseID}/weights`, {\n        assessmentType: newAssessmentType,\n        weightPercentage: newWeightPercentage\n      }, {\n        headers: {\n          'x-user-id': userId\n        }\n      });\n      setAddingWeight(false);\n      setNewAssessmentType('');\n      setNewWeightPercentage('');\n      fetchAssessments(); // re-load weights & assessments\n      window.dispatchEvent(new CustomEvent('refreshCourseList'));\n    } catch (err) {\n      console.error('Failed to add weight', err);\n      // you could set an error state here if desired\n    }\n  };\n  const fetchAssessments = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Fetch assessments\n      console.log('CourseItem: Fetching assessments', {\n        courseId: c.CourseID,\n        courseName: c.CourseName\n      });\n      const assessmentsResponse = await api.get(`/api/courses/${c.CourseID}/assessments`);\n      console.log('CourseItem: Assessments fetched', {\n        courseId: c.CourseID,\n        courseName: c.CourseName,\n        assessmentCount: assessmentsResponse.data.length\n      });\n      setAssessments(assessmentsResponse.data);\n\n      // Fetch weights\n      console.log('CourseItem: Fetching weights', {\n        courseId: c.CourseID,\n        courseName: c.CourseName\n      });\n      const weightsResponse = await api.get(`/api/courses/${c.CourseID}/weights`);\n      console.log('CourseItem: Weights fetched', {\n        courseId: c.CourseID,\n        courseName: c.CourseName,\n        weightCount: weightsResponse.data.length,\n        weights: weightsResponse.data\n      });\n      setWeights(weightsResponse.data);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching course data:', err);\n      setError('Failed to load course data');\n    } finally {\n      setLoading(false);\n    }\n  }, [c.CourseID]);\n\n  // Store the fetch function in a ref\n  useEffect(() => {\n    fetchRef.current = fetchAssessments;\n  }, [fetchAssessments]);\n\n  // Initial fetch when component mounts\n  useEffect(() => {\n    if (!initialFetchDone) {\n      console.log('CourseItem: Initial fetch', {\n        courseId: c.CourseID,\n        courseName: c.CourseName\n      });\n      fetchAssessments();\n      setInitialFetchDone(true);\n    }\n  }, [fetchAssessments, initialFetchDone, c.CourseID, c.CourseName]);\n\n  // Add event listener for course refresh\n  useEffect(() => {\n    const handleRefresh = event => {\n      if (event.detail.courseId === c.CourseID) {\n        console.log('Course refresh event received:', {\n          courseId: c.CourseID,\n          preserveOpenState: event.detail.preserveOpenState\n        });\n\n        // Only fetch assessments if the course is open or if preserveOpenState is true\n        if (open || event.detail.preserveOpenState) {\n          fetchAssessments();\n        }\n      }\n    };\n    window.addEventListener('refreshCourse', handleRefresh);\n    return () => window.removeEventListener('refreshCourse', handleRefresh);\n  }, [c.CourseID, open]);\n\n  // Group assessments by weight type\n  const groupedAssessments = useMemo(() => {\n    return weights.map(w => ({\n      weightType: w.assessmentType,\n      weightPercentage: w.currentWeight,\n      weightId: w.id,\n      courseId: c.CourseID,\n      assessments: assessments.filter(a => a.WeightID === w.id)\n    }));\n  }, [assessments, weights, c.CourseID]);\n\n  // Calculate overall grade\n  const overallGrade = useMemo(() => {\n    if (weights.length === 0 || assessments.length === 0) return c.OverallGrade || 0;\n\n    // Map the weights to the expected format\n    const mappedWeights = weights.map(w => ({\n      WeightID: w.id,\n      AssessmentType: w.assessmentType,\n      WeightPercentage: w.currentWeight\n    }));\n    const courseData = {\n      weights: mappedWeights,\n      assessments\n    };\n    const calculatedGrade = calculateOverallGrade(courseData);\n    // Ensure the result is a number\n    const result = isNaN(calculatedGrade) ? 0 : calculatedGrade;\n\n    // Log the grade change\n    console.log(`Course ${c.CourseName} (ID: ${c.CourseID}) grade updated:`, {\n      previousGrade: c.OverallGrade || 0,\n      newGrade: result,\n      weights: mappedWeights.map(w => ({\n        type: w.AssessmentType,\n        percentage: w.WeightPercentage\n      })),\n      assessmentCount: assessments.length\n    });\n    return result;\n  }, [weights, assessments, c.OverallGrade, c.CourseID, c.CourseName]);\n  const gradeColor = useMemo(() => {\n    return getGradeColor(overallGrade);\n  }, [overallGrade]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-item\",\n    \"data-course-id\": c.CourseID,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-details\",\n        onClick: () => setOpen(o => !o),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-name\",\n          children: c.CourseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructor\",\n          children: c.Instructor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => onEdit(c.CourseID),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => onDelete(c.UserID, c.CourseID),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `grade ${gradeColor}`,\n        children: typeof overallGrade === 'number' ? overallGrade.toFixed(1) : '0.0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n        onClick: () => setOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: open && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          height: 0,\n          opacity: 0\n        },\n        animate: {\n          height: 'auto',\n          opacity: 1\n        },\n        exit: {\n          height: 0,\n          opacity: 0\n        },\n        className: \"course-dropdown\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '10px 20px'\n            },\n            children: addingWeight ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weight-editor\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weight-editor-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Add New Assessment Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weight-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"weight-input\",\n                  value: newAssessmentType,\n                  onChange: e => setNewAssessmentType(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weight-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Weight %:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"weight-input\",\n                  value: newWeightPercentage,\n                  onChange: e => setNewWeightPercentage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"weight-percent\",\n                  children: \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weight-editor-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"save-button\",\n                  onClick: handleAddWeightSave,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel-button\",\n                  onClick: () => setAddingWeight(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: () => setAddingWeight(true),\n              children: \"Add Assessment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), groupedAssessments.length > 0 ? groupedAssessments.map((g, i) => /*#__PURE__*/_jsxDEV(WeightSection, {\n            courseId: g.courseId,\n            weightId: g.weightId,\n            weightPercentage: g.weightPercentage,\n            assessmentType: g.weightType,\n            assessments: g.assessments,\n            onWeightUpdate: newWeight => {\n              // Dispatch a refresh event to update the course data\n              const event = new CustomEvent('refreshCourse', {\n                detail: {\n                  courseId: g.courseId\n                }\n              });\n              window.dispatchEvent(event);\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No assessments.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n};\n_s2(CourseItem, \"8EuMN70YxRNl8EVIyg6EBVBPZaU=\");\n_c3 = CourseItem;\nfunction CourseList() {\n  _s3();\n  const [allCourses, setAllCourses] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [sem, setSem] = useState('All'),\n    [yr, setYr] = useState('All');\n  const [openSem, setOpenSem] = useState(false),\n    [openYr, setOpenYr] = useState(false);\n  const {\n    userId,\n    isLoading\n  } = useContext(UserContext);\n  const nav = useNavigate();\n  const fetch = () => {\n    if (!userId || isLoading) return; // Don't fetch if userId is not available or still loading\n\n    console.log('Fetching ALL course data...');\n    api.get('/').then(r => {\n      console.log('All Course data fetched:', r.data);\n      setAllCourses(r.data);\n    }).catch(err => {\n      console.error('Error fetching courses:', err);\n    });\n  };\n  useEffect(fetch, [userId, isLoading]); // Add isLoading to dependencies\n\n  // filters courses based on semesters\n  useEffect(() => {\n    if (!allCourses.length) return;\n    let filtered = [...allCourses];\n    if (sem !== 'All') filtered = filtered.filter(c => c.Semester === sem);\n    if (yr !== 'All') filtered = filtered.filter(c => c.Year === yr);\n    setCourses(filtered);\n  }, [sem, yr, allCourses]);\n\n  // Add event listener for refreshCourseList event\n  useEffect(() => {\n    const handleRefreshCourseList = () => {\n      console.log('refreshCourseList event received, refreshing course data');\n      fetch();\n    };\n    window.addEventListener('refreshCourseList', handleRefreshCourseList);\n    return () => window.removeEventListener('refreshCourseList', handleRefreshCourseList);\n  }, []);\n  const unique = field => ['All', ...Array.from(new Set(allCourses.map(c => c[field])))];\n  const uniqueYears = () => {\n    const years = Array.from(new Set(allCourses.map(c => c.Year)));\n    years.sort((a, b) => a - b); // Sorts years ascending (2023, 2024, 2025)\n    return ['All', ...years];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `semester-dropdown ${openSem ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"semester-button\",\n          onClick: () => setOpenSem(o => !o),\n          children: [sem, \" v\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), openSem && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: unique('Semester', courses).map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: s === sem ? 'active' : '',\n            onClick: () => {\n              setSem(s);\n              setOpenSem(false);\n            },\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `semester-download ${openYr ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: () => setOpenYr(o => !o),\n          children: [yr, \" v\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), openYr && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: uniqueYears().map(y => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: y === yr ? 'active' : '',\n            onClick: () => {\n              setYr(y);\n              setOpenYr(false);\n            },\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: () => nav('/create'),\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: courses.map(c => /*#__PURE__*/_jsxDEV(CourseItem, {\n        c: c,\n        onDelete: (u, id) => api.delete(`/course/${id}`, {\n          data: {\n            UserID: userId\n          }\n        }).then(fetch),\n        onEdit: id => nav(`/edit/${id}`)\n      }, c.CourseID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 5\n  }, this);\n}\n\n/* ------------ Create & Edit Pages ------------ */\n_s3(CourseList, \"tCG28gU/4YEui80w3anXSgudbW4=\", false, function () {\n  return [useNavigate];\n});\n_c4 = CourseList;\nfunction CreateCourse() {\n  _s4();\n  const [form, setForm] = useState({\n    CourseName: '',\n    Instructor: '',\n    Semester: '',\n    Year: '',\n    CreditHours: ''\n  });\n  const {\n    userId\n  } = useContext(UserContext);\n  const nav = useNavigate();\n  const change = e => setForm(f => ({\n    ...f,\n    [e.target.name]: e.target.value\n  }));\n  const submit = e => {\n    e.preventDefault();\n    api.post('/course', {\n      ...form,\n      UserId: userId\n    }).then(() => nav('/courses'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [['CourseName', 'Instructor', 'Semester', 'Year', 'CreditHours'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: field,\n          type: field === 'CreditHours' ? 'number' : 'text',\n          className: \"form-control\",\n          value: form[field],\n          onChange: change,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => nav('/courses'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 5\n  }, this);\n}\n_s4(CreateCourse, \"nYlpPX2NllIFdJ8il6tceMdSkXQ=\", false, function () {\n  return [useNavigate];\n});\n_c5 = CreateCourse;\nfunction EditCourse() {\n  _s5();\n  const {\n    id\n  } = useParams();\n  const {\n    userId\n  } = useContext(UserContext);\n  const [form, setForm] = useState({});\n  const [loading, setLoading] = useState(true);\n  const nav = useNavigate();\n  useEffect(() => {\n    api.get(`/course/${id}?userId=${userId}`).then(r => setForm(r.data)).finally(() => setLoading(false));\n  }, [id, userId]);\n  const change = e => setForm(f => ({\n    ...f,\n    [e.target.name]: e.target.value\n  }));\n  const submit = e => {\n    e.preventDefault();\n    api.put(`/course/${id}`, {\n      ...form,\n      UserID: userId\n    }).then(() => nav('/courses'));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 580,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [['CourseName', 'Instructor', 'Semester', 'Year', 'CreditHours'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: field,\n          type: field === 'CreditHours' ? 'number' : 'text',\n          className: \"form-control\",\n          value: form[field] || '',\n          onChange: change,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => nav('/courses'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 5\n  }, this);\n}\n_s5(EditCourse, \"/JC+j5CLVZIztyAup99f2yfDtf0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c6 = EditCourse;\nexport default CourseList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AssessmentItem\");\n$RefreshReg$(_c2, \"WeightSection\");\n$RefreshReg$(_c3, \"CourseItem\");\n$RefreshReg$(_c4, \"CourseList\");\n$RefreshReg$(_c5, \"CreateCourse\");\n$RefreshReg$(_c6, \"EditCourse\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","useCallback","useRef","useMemo","BrowserRouter","Routes","Route","Navigate","useNavigate","useParams","axios","motion","AnimatePresence","ChevronDown","ChevronUp","WeightEditor","AssessmentList","calculateSectionAverage","calculateOverallGrade","getGradeColor","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","api","create","baseURL","process","env","REACT_APP_API_BASE","headers","interceptors","request","use","config","userId","localStorage","getItem","AssessmentItem","a","className","children","AssessmentName","fileName","_jsxFileName","lineNumber","columnNumber","IndividualGrade","_c","WeightSection","courseId","weightId","weightPercentage","assessmentType","assessments","onWeightUpdate","_s","editing","setEditing","currentWeight","setCurrentWeight","loading","setLoading","error","setError","lastRefreshTime","confirmDelete","setConfirmDelete","console","log","sectionAverage","avg","isNaN","handleWeightUpdate","newWeight","now","Date","current","event","CustomEvent","detail","window","dispatchEvent","courseListEvent","handleAssessmentChange","handleSave","handleDeleteWeight","delete","data","err","onClick","toFixed","e","stopPropagation","onSave","onCancel","div","initial","height","opacity","animate","exit","onAssessmentChange","_c2","CourseItem","c","onDelete","onEdit","_s2","open","setOpen","setAssessments","weights","setWeights","fetchRef","initialFetchDone","setInitialFetchDone","addingWeight","setAddingWeight","newAssessmentType","setNewAssessmentType","newWeightPercentage","setNewWeightPercentage","handleAddWeightSave","post","CourseID","fetchAssessments","courseName","CourseName","assessmentsResponse","get","assessmentCount","length","weightsResponse","weightCount","handleRefresh","preserveOpenState","addEventListener","removeEventListener","groupedAssessments","map","w","weightType","id","filter","WeightID","overallGrade","OverallGrade","mappedWeights","AssessmentType","WeightPercentage","courseData","calculatedGrade","result","previousGrade","newGrade","type","percentage","gradeColor","o","Instructor","UserID","style","padding","value","onChange","target","g","i","_c3","CourseList","_s3","allCourses","setAllCourses","courses","setCourses","sem","setSem","yr","setYr","openSem","setOpenSem","openYr","setOpenYr","isLoading","nav","fetch","then","r","catch","filtered","Semester","Year","handleRefreshCourseList","unique","field","Array","from","Set","uniqueYears","years","sort","b","s","y","u","_c4","CreateCourse","_s4","form","setForm","CreditHours","change","f","name","submit","preventDefault","UserId","onSubmit","required","_c5","EditCourse","_s5","finally","put","_c6","$RefreshReg$"],"sources":["/Users/rizvydanish/Desktop/Team10-main/landy-react-template/src/pages/Course.jsx"],"sourcesContent":["// course.jsx\nimport React, { useState, useEffect, createContext, useContext, useCallback, useRef, useMemo } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronDown, ChevronUp } from 'lucide-react';\nimport WeightEditor from './components/WeightEditor';\nimport AssessmentList from './components/AssessmentList';\nimport { calculateSectionAverage, calculateOverallGrade, getGradeColor } from './utils/gradeCalculations';\nimport { UserContext } from './UserContext'; \nimport './App.css';\n\n/* ------------ API Helper ------------ */\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE || 'http://localhost:5050',\n  headers: { 'Content-Type': 'application/json' }\n});\n\n// Add request interceptor to include userId in headers\napi.interceptors.request.use(config => {\n  const userId = localStorage.getItem('userId');\n  if (userId) {\n    config.headers['x-user-id'] = userId;\n  }\n  return config;\n});\n\n/* ------------ Course Listing & Details ------------ */\nconst AssessmentItem = ({ a }) => (\n  <div className=\"assessment-item\">\n    <span>{a.AssessmentName}:</span>\n    <span>{a.IndividualGrade!=null?`${a.IndividualGrade}%`:'N/A'}</span>\n  </div>\n);\nconst WeightSection = ({ courseId, weightId, weightPercentage, assessmentType, assessments = [], onWeightUpdate }) => {\n  const { userId } = useContext(UserContext);\n  const [editing, setEditing] = useState(false);\n  const [currentWeight, setCurrentWeight] = useState(weightPercentage);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const lastRefreshTime = useRef(0);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  // Update currentWeight when weightPercentage prop changes\n  useEffect(() => {\n    console.log('WeightSection: weightPercentage prop changed', { \n      courseId, \n      weightId, \n      assessmentType, \n      weightPercentage \n    });\n    setCurrentWeight(weightPercentage);\n  }, [weightPercentage, courseId, weightId, assessmentType]);\n\n  // Calculate section average\n  const sectionAverage = useMemo(() => {\n    const avg = calculateSectionAverage(assessments);\n    // Ensure the result is a number\n    return isNaN(avg) ? 0 : avg;\n  }, [assessments]);\n\n  const handleWeightUpdate = async (newWeight) => {\n    setCurrentWeight(newWeight);\n    onWeightUpdate(newWeight);\n    \n    // Trigger a refresh of the course data\n    const now = Date.now();\n    if (now - lastRefreshTime.current > 1000) {\n      lastRefreshTime.current = now;\n      const event = new CustomEvent('refreshCourse', { \n        detail: { courseId } \n      });\n      window.dispatchEvent(event);\n      \n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    }\n  };\n\n  const handleAssessmentChange = () => {\n    // Only refresh if it's been more than 1 second since the last refresh\n    const now = Date.now();\n    if (now - lastRefreshTime.current > 1000) {\n      lastRefreshTime.current = now;\n      const event = new CustomEvent('refreshCourse', { \n        detail: { courseId } \n      });\n      window.dispatchEvent(event);\n      \n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    }\n  };\n\n  const handleSave = async () => {\n    // Don't close the editor after saving\n    // This allows the user to see the updated weight and continue editing if needed\n  };\n\n  const handleDeleteWeight = async () => {\n    try {\n      await api.delete(\n        `/api/courses/${courseId}/weights`,\n        { \n          data: { assessmentType },\n          headers: { 'x-user-id': userId }\n        }\n      );\n      \n      // Trigger a refresh of the course data\n      const event = new CustomEvent('refreshCourse', { \n        detail: { courseId } \n      });\n      window.dispatchEvent(event);\n      \n      // Also trigger a refresh of the course list to update the overall grade\n      const courseListEvent = new CustomEvent('refreshCourseList');\n      window.dispatchEvent(courseListEvent);\n    } catch (err) {\n      console.error('Failed to delete weight', err);\n      setError('Failed to delete weight');\n    }\n  };\n\n  return (\n    <div className=\"weight-section\">\n      <div className=\"weight-header\" onClick={() => !editing && setEditing(true)}>\n        <div className=\"weight-info\">\n          <span className=\"weight-type\">{assessmentType}</span>\n          <span className=\"weight-percentage\">({currentWeight}%)</span>\n          <span className=\"section-average\">Average: {typeof sectionAverage === 'number' ? sectionAverage.toFixed(1) : '0.0'}%</span>\n        </div>\n        <div className=\"weight-actions\">\n          <button className=\"edit-weight-button\" onClick={() => setEditing(true)}>\n            Edit\n          </button>\n          <button \n            className=\"delete-weight-button\" \n            onClick={(e) => {\n              e.stopPropagation();\n              setConfirmDelete(true);\n            }}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      \n      {confirmDelete && (\n        <div className=\"delete-confirmation\">\n          <p>Are you sure you want to delete this assessment type and all its assessments?</p>\n          <div className=\"confirmation-actions\">\n            <button onClick={handleDeleteWeight}>Yes, Delete</button>\n            <button onClick={() => setConfirmDelete(false)}>Cancel</button>\n          </div>\n        </div>\n      )}\n      \n      {editing && (\n        <WeightEditor\n          courseId={courseId}\n          weightId={weightId}\n          assessmentType={assessmentType}\n          weightPercentage={currentWeight}\n          onSave={handleSave}\n          onCancel={() => setEditing(false)}\n          onWeightUpdate={handleWeightUpdate}\n        />\n      )}\n      \n      <AnimatePresence>\n        {editing && (\n          <motion.div \n            initial={{height:0,opacity:0}} \n            animate={{height:'auto',opacity:1}} \n            exit={{height:0,opacity:0}} \n            className=\"assessment-list\"\n          >\n            <AssessmentList\n              courseId={courseId}\n              weightId={weightId}\n              assessmentType={assessmentType}\n              assessments={assessments}\n              onAssessmentChange={handleAssessmentChange}\n            />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst CourseItem = ({ c, onDelete, onEdit }) => {\n  const [open, setOpen] = useState(false);\n  const [assessments, setAssessments] = useState([]);\n  const [weights, setWeights] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { userId } = useContext(UserContext);\n  const fetchRef = useRef();\n  const [initialFetchDone, setInitialFetchDone] = useState(false);\n  \n  // ─── ADD WEIGHT STATE & HANDLERS ────────────────────────────────────────────\n  const [addingWeight, setAddingWeight] = useState(false);\n  const [newAssessmentType, setNewAssessmentType] = useState('');\n  const [newWeightPercentage, setNewWeightPercentage] = useState('');\n\n  const handleAddWeightSave = async () => {\n    try {\n      await api.post(\n        `/api/courses/${c.CourseID}/weights`,\n        { assessmentType: newAssessmentType, weightPercentage: newWeightPercentage },\n        { headers: { 'x-user-id': userId } }\n      );\n      setAddingWeight(false);\n      setNewAssessmentType('');\n      setNewWeightPercentage('');\n      fetchAssessments(); // re-load weights & assessments\n      window.dispatchEvent(new CustomEvent('refreshCourseList'));\n    } catch (err) {\n      console.error('Failed to add weight', err);\n      // you could set an error state here if desired\n    }\n  };\n\n  const fetchAssessments = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Fetch assessments\n      console.log('CourseItem: Fetching assessments', { \n        courseId: c.CourseID, \n        courseName: c.CourseName \n      });\n      const assessmentsResponse = await api.get(`/api/courses/${c.CourseID}/assessments`);\n      console.log('CourseItem: Assessments fetched', { \n        courseId: c.CourseID, \n        courseName: c.CourseName,\n        assessmentCount: assessmentsResponse.data.length\n      });\n      setAssessments(assessmentsResponse.data);\n      \n      // Fetch weights\n      console.log('CourseItem: Fetching weights', { \n        courseId: c.CourseID, \n        courseName: c.CourseName \n      });\n      const weightsResponse = await api.get(`/api/courses/${c.CourseID}/weights`);\n      console.log('CourseItem: Weights fetched', { \n        courseId: c.CourseID, \n        courseName: c.CourseName,\n        weightCount: weightsResponse.data.length,\n        weights: weightsResponse.data\n      });\n      setWeights(weightsResponse.data);\n      \n      setError('');\n    } catch (err) {\n      console.error('Error fetching course data:', err);\n      setError('Failed to load course data');\n    } finally {\n      setLoading(false);\n    }\n  }, [c.CourseID]);\n\n  // Store the fetch function in a ref\n  useEffect(() => {\n    fetchRef.current = fetchAssessments;\n  }, [fetchAssessments]);\n\n  // Initial fetch when component mounts\n  useEffect(() => {\n    if (!initialFetchDone) {\n      console.log('CourseItem: Initial fetch', { \n        courseId: c.CourseID, \n        courseName: c.CourseName \n      });\n      fetchAssessments();\n      setInitialFetchDone(true);\n    }\n  }, [fetchAssessments, initialFetchDone, c.CourseID, c.CourseName]);\n\n  // Add event listener for course refresh\n  useEffect(() => {\n    const handleRefresh = (event) => {\n      if (event.detail.courseId === c.CourseID) {\n        console.log('Course refresh event received:', {\n          courseId: c.CourseID,\n          preserveOpenState: event.detail.preserveOpenState\n        });\n        \n        // Only fetch assessments if the course is open or if preserveOpenState is true\n        if (open || event.detail.preserveOpenState) {\n          fetchAssessments();\n        }\n      }\n    };\n\n    window.addEventListener('refreshCourse', handleRefresh);\n    return () => window.removeEventListener('refreshCourse', handleRefresh);\n  }, [c.CourseID, open]);\n\n  // Group assessments by weight type\n  const groupedAssessments = useMemo(() => {\n    return weights.map(w => ({\n      weightType:      w.assessmentType,\n      weightPercentage: w.currentWeight,\n      weightId:        w.id,\n      courseId:        c.CourseID,\n      assessments:     assessments.filter(a => a.WeightID === w.id)\n    }));\n  }, [assessments, weights, c.CourseID]);\n\n  // Calculate overall grade\n  const overallGrade = useMemo(() => {\n    if (weights.length === 0 || assessments.length === 0) return c.OverallGrade || 0;\n    \n    // Map the weights to the expected format\n    const mappedWeights = weights.map(w => ({\n      WeightID: w.id,\n      AssessmentType: w.assessmentType,\n      WeightPercentage: w.currentWeight\n    }));\n    \n    const courseData = {\n      weights: mappedWeights,\n      assessments\n    };\n    \n    const calculatedGrade = calculateOverallGrade(courseData);\n    // Ensure the result is a number\n    const result = isNaN(calculatedGrade) ? 0 : calculatedGrade;\n    \n    // Log the grade change\n    console.log(`Course ${c.CourseName} (ID: ${c.CourseID}) grade updated:`, {\n      previousGrade: c.OverallGrade || 0,\n      newGrade: result,\n      weights: mappedWeights.map(w => ({ type: w.AssessmentType, percentage: w.WeightPercentage })),\n      assessmentCount: assessments.length\n    });\n    \n    return result;\n  }, [weights, assessments, c.OverallGrade, c.CourseID, c.CourseName]);\n\n  const gradeColor = useMemo(() => {\n    return getGradeColor(overallGrade);\n  }, [overallGrade]);\n\n  return (\n    <div className=\"course-item\" data-course-id={c.CourseID}>\n      <div className=\"course-header\">\n        <div className=\"course-details\" onClick={() => setOpen(o => !o)}>\n          <div className=\"course-name\">{c.CourseName}</div>\n          <div className=\"instructor\">{c.Instructor}</div>\n        </div>\n        <div className=\"header-actions\">\n          <button className=\"edit-button\" onClick={() => onEdit(c.CourseID)}>Edit</button>\n          <button className=\"delete-button\" onClick={() => onDelete(c.UserID, c.CourseID)}>Delete</button>\n        </div>\n        <div className={`grade ${gradeColor}`}>\n          {typeof overallGrade === 'number' ? overallGrade.toFixed(1) : '0.0'}\n        </div>\n        {open ? <ChevronUp onClick={() => setOpen(false)} /> : <ChevronDown onClick={() => setOpen(true)} />}\n      </div>\n      <AnimatePresence>\n        {open && (\n          <motion.div \n            initial={{height:0,opacity:0}} \n            animate={{height:'auto',opacity:1}} \n            exit={{height:0,opacity:0}} \n            className=\"course-dropdown\"\n          >\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              <>\n                {/* Add Weight Form */}\n                <div style={{ padding: '10px 20px' }}>\n                  {addingWeight ? (\n                    <div className=\"weight-editor\">\n                      <div className=\"weight-editor-header\">\n                        <h4>Add New Assessment Type</h4>\n                      </div>\n                      <div className=\"weight-input-container\">\n                        <label>Name:</label>\n                        <input\n                          type=\"text\"\n                          className=\"weight-input\"\n                          value={newAssessmentType}\n                          onChange={e => setNewAssessmentType(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"weight-input-container\">\n                        <label>Weight %:</label>\n                        <input\n                          type=\"number\"\n                          className=\"weight-input\"\n                          value={newWeightPercentage}\n                          onChange={e => setNewWeightPercentage(e.target.value)}\n                        />\n                        <span className=\"weight-percent\">%</span>\n                      </div>\n                      <div className=\"weight-editor-actions\">\n                        <button className=\"save-button\" onClick={handleAddWeightSave}>Save</button>\n                        <button className=\"cancel-button\" onClick={() => setAddingWeight(false)}>Cancel</button>\n                      </div>\n                    </div>\n                  ) : (\n                    <button\n                      className=\"save-button\"\n                      onClick={() => setAddingWeight(true)}\n                    >\n                      Add Assessment Type\n                    </button>\n                  )}\n                </div>\n                \n                {/* Weight Sections */}\n                {groupedAssessments.length > 0 ? (\n                  groupedAssessments.map((g, i) => (\n                    <WeightSection \n                      key={i} \n                      courseId={g.courseId} \n                      weightId={g.weightId} \n                      weightPercentage={g.weightPercentage} \n                      assessmentType={g.weightType} \n                      assessments={g.assessments} \n                      onWeightUpdate={(newWeight) => {\n                        // Dispatch a refresh event to update the course data\n                        const event = new CustomEvent('refreshCourse', { \n                          detail: { courseId: g.courseId } \n                        });\n                        window.dispatchEvent(event);\n                      }}\n                    />\n                  ))\n                ) : (\n                  <div>No assessments.</div>\n                )}\n              </>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nfunction CourseList() {\n  const [allCourses, setAllCourses] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [sem, setSem] = useState('All'), [yr,setYr]=useState('All');\n  const [openSem, setOpenSem] = useState(false), [openYr,setOpenYr]=useState(false);\n  const { userId, isLoading } = useContext(UserContext);\n  const nav = useNavigate();\n\n  const fetch = () => {\n    if (!userId || isLoading) return; // Don't fetch if userId is not available or still loading\n    \n    console.log('Fetching ALL course data...');\n    \n    api.get('/')\n       .then(r => {\n         console.log('All Course data fetched:', r.data);\n         setAllCourses(r.data);\n       })\n       .catch(err => {\n         console.error('Error fetching courses:', err);\n       });\n  };\n\n  useEffect(fetch, [userId, isLoading]); // Add isLoading to dependencies\n\n  // filters courses based on semesters\n  useEffect(() => {\n    if (!allCourses.length) return;\n    let filtered = [...allCourses];\n    if (sem !== 'All') filtered = filtered.filter(c => c.Semester === sem);\n    if (yr !== 'All') filtered = filtered.filter(c => c.Year === yr);\n    setCourses(filtered);\n  }, [sem, yr, allCourses]);\n  \n  // Add event listener for refreshCourseList event\n  useEffect(() => {\n    const handleRefreshCourseList = () => {\n      console.log('refreshCourseList event received, refreshing course data');\n      fetch();\n    };\n    \n    window.addEventListener('refreshCourseList', handleRefreshCourseList);\n    return () => window.removeEventListener('refreshCourseList', handleRefreshCourseList);\n  }, []);\n\n  const unique = (field) => ['All', ...Array.from(new Set(allCourses.map(c => c[field])))];\n  const uniqueYears = () => {\n    const years = Array.from(new Set(allCourses.map(c => c.Year)));\n    years.sort((a, b) => a - b); // Sorts years ascending (2023, 2024, 2025)\n    return ['All', ...years];\n  };\n\n  return (\n    <div className=\"course-container\">\n      <div className=\"header\">\n        <div className={`semester-dropdown ${openSem?'open':''}`}>\n          <button className=\"semester-button\" onClick={()=>setOpenSem(o=>!o)}>{sem} v</button>\n          {openSem && <div className=\"dropdown-content\">\n            {unique('Semester',courses).map(s=><button key={s} className={s===sem?'active':''} onClick={()=>{setSem(s);setOpenSem(false);}}>{s}</button>)}\n          </div>}\n        </div>\n        <div className={`semester-download ${openYr?'open':''}`}>\n          <button className=\"download-button\" onClick={()=>setOpenYr(o=>!o)}>{yr} v</button>\n          {openYr && <div className=\"dropdown-content\">\n            {uniqueYears().map(y=><button key={y} className={y===yr?'active':''} onClick={()=>{setYr(y);setOpenYr(false);}}>{y}</button>)}\n          </div>}\n        </div>\n        <button className=\"add-button\" onClick={()=>nav('/create')}>Add Course</button>\n      </div>\n      <div className=\"course-list\">\n        {courses.map(c=>(\n          <CourseItem key={c.CourseID} c={c} \n            onDelete={(u,id)=>api.delete(`/course/${id}`,{data:{UserID:userId}}).then(fetch)}\n            onEdit={id=>nav(`/edit/${id}`)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n/* ------------ Create & Edit Pages ------------ */\nfunction CreateCourse() {\n  const [form, setForm] = useState({ CourseName:'',Instructor:'',Semester:'',Year:'',CreditHours:'' });\n  const { userId } = useContext(UserContext);\n  const nav = useNavigate();\n  const change = e => setForm(f=>({ ...f, [e.target.name]: e.target.value }));\n  const submit = e => {\n    e.preventDefault();\n    api.post('/course', { ...form, UserId: userId }).then(()=>nav('/courses'));\n  };\n  return (\n    <div className=\"container mt-5\">\n      <h2>Create Course</h2>\n      <form onSubmit={submit}>\n        {['CourseName','Instructor','Semester','Year','CreditHours'].map(field=>(\n          <div className=\"mb-3\" key={field}>\n            <label className=\"form-label\">{field}</label>\n            <input \n              name={field} \n              type={field==='CreditHours'?'number':'text'} \n              className=\"form-control\" \n              value={form[field]} \n              onChange={change} required \n            />\n          </div>\n        ))}\n        <button className=\"btn btn-primary\">Create</button>\n        <button type=\"button\" className=\"btn btn-secondary ms-2\" onClick={()=>nav('/courses')}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nfunction EditCourse() {\n  const { id } = useParams();\n  const { userId } = useContext(UserContext);\n  const [form, setForm] = useState({});\n  const [loading, setLoading] = useState(true);\n  const nav = useNavigate();\n  useEffect(()=>{\n    api.get(`/course/${id}?userId=${userId}`)\n       .then(r=>setForm(r.data))\n       .finally(()=>setLoading(false));\n  },[id,userId]);\n  const change = e => setForm(f=>({ ...f, [e.target.name]: e.target.value }));\n  const submit = e => {\n    e.preventDefault();\n    api.put(`/course/${id}`, { ...form, UserID: userId }).then(()=>nav('/courses'));\n  };\n  if (loading) return <div>Loading...</div>;\n  return (\n    <div className=\"container mt-5\">\n      <h2>Edit Course</h2>\n      <form onSubmit={submit}>\n        {['CourseName','Instructor','Semester','Year','CreditHours'].map(field=>(\n          <div className=\"mb-3\" key={field}>\n            <label className=\"form-label\">{field}</label>\n            <input \n              name={field} \n              type={field==='CreditHours'?'number':'text'} \n              className=\"form-control\" \n              value={form[field]||''} \n              onChange={change} required \n            />\n          </div>\n        ))}\n        <button className=\"btn btn-primary\">Save</button>\n        <button type=\"button\" className=\"btn btn-secondary ms-2\" onClick={()=>nav('/courses')}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CourseList;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}