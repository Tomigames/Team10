{"ast":null,"code":"var _jsxFileName = \"/Users/rizvydanish/Desktop/Team10-main/landy-react-template/src/pages/CourseGrades.jsx\",\n  _s = $RefreshSig$();\n// courseGrades.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseGrades = ({\n  userId\n}) => {\n  _s();\n  var _whatIfEntries;\n  // New state for courses and selected course ID\n  const [courses, setCourses] = useState([]);\n  const [selectedCourseId, setSelectedCourseId] = useState(null);\n\n  // Existing states\n\n  const [gradeError, setGradeError] = useState('');\n  const [courseData, setCourseData] = useState({\n    details: null,\n    assessments: [],\n    weights: {},\n    typeAverages: {},\n    cumulativeGrade: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // what if calculator states - updated to support multiple entries\n  const [whatIfEntries, setWhatIfEntries] = useState([]);\n  const [currentWhatIf, setCurrentWhatIf] = useState({\n    type: '',\n    grade: ''\n  });\n  const [whatIfResults, setWhatIfResults] = useState({});\n\n  // Fetch courses when component mounts\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5050/?userId=${userId}`);\n        if (response.data && response.data.length > 0) {\n          setCourses(response.data);\n          // Set the first course as default selected\n          setSelectedCourseId(response.data[0].CourseID);\n        } else {\n          setError('No courses found for this user');\n        }\n      } catch (err) {\n        console.error('Error fetching courses:', err);\n        setError('Failed to load courses');\n      }\n    };\n    fetchCourses();\n  }, [userId]);\n\n  // this function will calculate the projected cumulative grade based on hypothetical entry\n  const calculateWhatIf = (typeToCalculate = null) => {\n    const results = {};\n\n    // Calculate for each what-if scenario\n    whatIfEntries.forEach(entry => {\n      let newCumulative = 0;\n\n      // weights are handled based on assessment type\n      Object.values(courseData.weights).forEach(group => {\n        let avg = 0;\n        let grades = [...group.grades];\n\n        // add all hypothetical grades of this type\n        whatIfEntries.filter(e => e.type === group.type).forEach(e => grades.push(Number(e.grade)));\n\n        // calculate average for assessment type\n        if (grades.length > 0) {\n          avg = grades.reduce((sum, g) => sum + g, 0) / grades.length;\n        }\n\n        // add weighted average to find new cumulative\n        newCumulative += avg * (group.percentage / 100);\n      });\n      results[entry.id] = newCumulative.toFixed(2);\n    });\n\n    // Also calculate for current form values if specified\n    if (typeToCalculate && currentWhatIf.grade !== \"\") {\n      let newCumulative = 0;\n      Object.values(courseData.weights).forEach(group => {\n        let avg = 0;\n        let grades = [...group.grades];\n\n        // add all hypothetical grades including current form\n        whatIfEntries.filter(e => e.type === group.type).forEach(e => grades.push(Number(e.grade)));\n        if (group.type === typeToCalculate) {\n          grades.push(Number(currentWhatIf.grade));\n        }\n        if (grades.length > 0) {\n          avg = grades.reduce((sum, g) => sum + g, 0) / grades.length;\n        }\n        newCumulative += avg * (group.percentage / 100);\n      });\n      setWhatIfResults({\n        ...results,\n        preview: newCumulative.toFixed(2)\n      });\n    } else {\n      setWhatIfResults(results);\n    }\n  };\n\n  // Validate and set numerical grade input\n  const handleGradeChange = e => {\n    const value = e.target.value;\n    // Only allow numbers, empty string, or single decimal point\n    if (value === '' || /^[0-9]*\\.?[0-9]*$/.test(value)) {\n      setCurrentWhatIf({\n        ...currentWhatIf,\n        grade: value\n      });\n      setGradeError('');\n    } else {\n      setGradeError('Please enter a numerical value!');\n    }\n  };\n\n  // Add new what-if scenario\n  const addWhatIfEntry = () => {\n    if (currentWhatIf.type && currentWhatIf.grade) {\n      const newEntry = {\n        id: Date.now(),\n        type: currentWhatIf.type,\n        grade: currentWhatIf.grade\n      };\n      setWhatIfEntries([...whatIfEntries, newEntry]);\n      setCurrentWhatIf({\n        type: '',\n        grade: ''\n      });\n    }\n  };\n\n  // Remove what-if scenario\n  const removeWhatIfEntry = id => {\n    setWhatIfEntries(whatIfEntries.filter(entry => entry.id !== id));\n  };\n\n  // Handle course selection change\n  const handleCourseChange = e => {\n    const courseId = parseInt(e.target.value);\n    setSelectedCourseId(courseId);\n    // Reset what-if states when changing courses\n    setWhatIfEntries([]);\n    setCurrentWhatIf({\n      type: '',\n      grade: ''\n    });\n    setWhatIfResults({});\n  };\n\n  // Fetch course data when selectedCourseId changes\n  useEffect(() => {\n    if (!selectedCourseId) return;\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // fetch course details and assessments\n        const [courseRes, assessmentsRes] = await Promise.all([axios.get(`http://localhost:5050/api/courses/${selectedCourseId}?userId=${userId}`), axios.get(`http://localhost:5050/api/courses/${selectedCourseId}/assessments?userId=${userId}`)]);\n\n        // verify valid data\n        if (!courseRes.data) {\n          throw new Error('No course data found');\n        }\n\n        // If no assessments found, handle gracefully\n        const assessments = assessmentsRes.data || [];\n\n        // calculate weighted average properly\n        const weightGroups = assessments.reduce((groups, assessment) => {\n          if (!groups[assessment.WeightID]) {\n            groups[assessment.WeightID] = {\n              type: assessment.AssessmentType,\n              percentage: Number(assessment.WeightPercentage),\n              grades: []\n            };\n          }\n          // ensure grade is treated as a number, not string\n          const grade = Number(assessment.IndividualGrade);\n          if (!isNaN(grade)) {\n            groups[assessment.WeightID].grades.push(grade);\n          }\n          return groups;\n        }, {});\n\n        // calculate type averages\n        const typeAverages = assessments.reduce((averages, assessment) => {\n          const grade = Number(assessment.IndividualGrade);\n          if (!isNaN(grade)) {\n            if (!averages[assessment.AssessmentType]) {\n              averages[assessment.AssessmentType] = {\n                total: 0,\n                count: 0\n              };\n            }\n            averages[assessment.AssessmentType].total += grade;\n            averages[assessment.AssessmentType].count++;\n          }\n          return averages;\n        }, {});\n\n        // calculate final grade\n        let cumulativeGrade = 0;\n        Object.values(weightGroups).forEach(group => {\n          if (group.grades.length > 0) {\n            const categoryAvg = group.grades.reduce((sum, grade) => sum + grade, 0) / group.grades.length;\n            cumulativeGrade += categoryAvg * (group.percentage / 100);\n          }\n        });\n\n        // update state\n        setCourseData({\n          details: courseRes.data,\n          assessments: assessments,\n          weights: weightGroups,\n          typeAverages: Object.fromEntries(Object.entries(typeAverages).map(([type, {\n            total,\n            count\n          }]) => [type, (total / count).toFixed(2)])),\n          cumulativeGrade: cumulativeGrade.toFixed(2)\n        });\n      } catch (err) {\n        console.error('Error:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId, selectedCourseId]);\n  useEffect(() => {\n    calculateWhatIf(currentWhatIf.type);\n  }, [whatIfEntries, currentWhatIf.type, currentWhatIf.grade, courseData]);\n\n  // Show loading when fetching initial course list\n  if (loading && !selectedCourseId) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: \"Loading courses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 44\n  }, this);\n  if (error && !selectedCourseId) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red',\n      padding: '20px'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 42\n  }, this);\n  if (courses.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: \"No courses available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 36\n  }, this);\n\n  // main component being rendered\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"courseSelect\",\n        style: {\n          marginRight: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Select Course: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"courseSelect\",\n        value: selectedCourseId || '',\n        onChange: handleCourseChange,\n        style: {\n          padding: '8px 12px',\n          borderRadius: '4px',\n          border: '1px solid #ccc',\n          fontSize: '16px',\n          backgroundColor: '#fff',\n          width: '300px'\n        },\n        children: courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.CourseID,\n          children: [course.CourseName, \" - \", course.Instructor, \" (\", course.Semester, \" \", course.Year, \")\"]\n        }, course.CourseID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), selectedCourseId && loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: \"Loading grades...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 39\n    }, this), selectedCourseId && error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        padding: '20px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }, this), selectedCourseId && !loading && !courseData.details && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No course data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 63\n    }, this), selectedCourseId && !loading && courseData.details && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f5c978',\n          padding: '15px',\n          borderRadius: '5px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: courseData.details.CourseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Instructor: \", courseData.details.Instructor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Semester: \", courseData.details.Semester, \" \", courseData.details.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Cumulative Grade: \", courseData.cumulativeGrade, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), courseData.assessments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginBottom: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px',\n                textAlign: 'left'\n              },\n              children: \"Assessment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center'\n              },\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center'\n              },\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center'\n              },\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courseData.assessments.map((assessment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #ddd',\n              backgroundColor: index % 2 === 0 ? '#f9f9f9' : 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '12px'\n              },\n              children: assessment.AssessmentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center'\n              },\n              children: assessment.AssessmentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center'\n              },\n              children: [assessment.WeightPercentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '12px',\n                textAlign: 'center',\n                color: assessment.IndividualGrade >= 90 ? '#4CAF50' : assessment.IndividualGrade >= 80 ? '#FFC107' : '#F44336'\n              },\n              children: [assessment.IndividualGrade, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this)]\n          }, assessment.AssessmentID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '15px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '5px',\n          marginBottom: '20px',\n          textAlign: 'center'\n        },\n        children: \"No assessments available for this course yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }, this), Object.keys(courseData.weights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f5c978',\n          padding: '15px',\n          borderRadius: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grade Composition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this), Object.entries(courseData.weights).map(([weightId, weight]) => {\n          const avg = weight.grades.length > 0 ? (weight.grades.reduce((a, b) => a + b, 0) / weight.grades.length).toFixed(2) : 'N/A';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [weight.type, \"s:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), \" \", avg, \"% (Weight: \", weight.percentage, \"%)\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '10px',\n                backgroundColor: '#ddd',\n                borderRadius: '5px',\n                marginTop: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${weight.percentage}%`,\n                  height: '100%',\n                  backgroundColor: '#4CAF50',\n                  borderRadius: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 21\n            }, this)]\n          }, weightId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this), Object.keys(courseData.weights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f5c978',\n          padding: '15px',\n          borderRadius: '5px',\n          marginTop: '20px',\n          marginBottom: '30px',\n          border: '1px solid #ffeeba'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"What-If Grade Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type\",\n            children: \"Assessment Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"type\",\n            value: currentWhatIf.type,\n            onChange: e => setCurrentWhatIf({\n              ...currentWhatIf,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Type--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this), Object.values(courseData.weights).map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: group.type,\n              children: group.type\n            }, group.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"grade\",\n            children: \"Hypothetical Grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"grade\",\n            type: \"text\" // Changed to text to handle input more precisely\n            ,\n            value: currentWhatIf.grade,\n            onChange: handleGradeChange,\n            min: \"0\",\n            max: \"100\",\n            placeholder: \"Enter %\",\n            pattern: \"[0-9]*\" // HTML5 pattern for numbers only\n            ,\n            inputMode: \"numeric\" // Shows numeric keyboard on mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this), gradeError && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              marginLeft: '10px',\n              fontSize: '0.9em'\n            },\n            children: gradeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addWhatIfEntry,\n            style: {\n              background: '#4CAF50',\n              color: 'white',\n              padding: '5px 10px',\n              border: 'none',\n              borderRadius: '3px',\n              cursor: 'pointer'\n            },\n            disabled: !currentWhatIf.type || !currentWhatIf.grade || gradeError,\n            children: \"Add Scenario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this), whatIfEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Active Scenarios:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: whatIfEntries.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px',\n                backgroundColor: '#f8f9fa',\n                marginBottom: '5px',\n                borderRadius: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [entry.type, \": \", entry.grade, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeWhatIfEntry(entry.id),\n                style: {\n                  background: '#dc3545',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '3px',\n                  padding: '2px 6px',\n                  cursor: 'pointer'\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 25\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }, this), whatIfResults.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            padding: '10px',\n            backgroundColor: '#d1ecf1',\n            borderRadius: '5px',\n            color: '#0c5460'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preview Projected Grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 19\n          }, this), \" \", whatIfResults.preview, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }, this), whatIfEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            padding: '10px',\n            backgroundColor: '#d4edda',\n            borderRadius: '5px',\n            color: '#155724'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Combined Projected Grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 19\n          }, this), \" \", whatIfResults[(_whatIfEntries = whatIfEntries[whatIfEntries.length - 1]) === null || _whatIfEntries === void 0 ? void 0 : _whatIfEntries.id] || '0', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseGrades, \"30/kb1V/aIC9MCWf3G0Ya5IdS8s=\");\n_c = CourseGrades;\nexport default CourseGrades;\nvar _c;\n$RefreshReg$(_c, \"CourseGrades\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseGrades","userId","_s","_whatIfEntries","courses","setCourses","selectedCourseId","setSelectedCourseId","gradeError","setGradeError","courseData","setCourseData","details","assessments","weights","typeAverages","cumulativeGrade","loading","setLoading","error","setError","whatIfEntries","setWhatIfEntries","currentWhatIf","setCurrentWhatIf","type","grade","whatIfResults","setWhatIfResults","fetchCourses","response","get","data","length","CourseID","err","console","calculateWhatIf","typeToCalculate","results","forEach","entry","newCumulative","Object","values","group","avg","grades","filter","e","push","Number","reduce","sum","g","percentage","id","toFixed","preview","handleGradeChange","value","target","test","addWhatIfEntry","newEntry","Date","now","removeWhatIfEntry","handleCourseChange","courseId","parseInt","fetchData","courseRes","assessmentsRes","Promise","all","Error","weightGroups","groups","assessment","WeightID","AssessmentType","WeightPercentage","IndividualGrade","isNaN","averages","total","count","categoryAvg","fromEntries","entries","map","message","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","maxWidth","margin","fontFamily","marginBottom","htmlFor","marginRight","fontWeight","onChange","borderRadius","border","fontSize","backgroundColor","width","course","CourseName","Instructor","Semester","Year","display","borderCollapse","index","borderBottom","AssessmentName","AssessmentID","keys","weightId","weight","a","b","height","marginTop","gap","alignItems","min","max","placeholder","pattern","inputMode","marginLeft","onClick","background","cursor","disabled","listStyle","justifyContent","_c","$RefreshReg$"],"sources":["/Users/rizvydanish/Desktop/Team10-main/landy-react-template/src/pages/CourseGrades.jsx"],"sourcesContent":["// courseGrades.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\n\nconst CourseGrades = ({ userId }) => {\n  // New state for courses and selected course ID\n  const [courses, setCourses] = useState([]);\n  const [selectedCourseId, setSelectedCourseId] = useState(null);\n  \n  // Existing states\n  \n  const [gradeError, setGradeError] = useState('');\n  const [courseData, setCourseData] = useState({\n    details: null,\n    assessments: [],\n    weights: {},\n    typeAverages: {},\n    cumulativeGrade: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // what if calculator states - updated to support multiple entries\n  const [whatIfEntries, setWhatIfEntries] = useState([]);\n  const [currentWhatIf, setCurrentWhatIf] = useState({\n    type: '',\n    grade: '',\n  });\n  const [whatIfResults, setWhatIfResults] = useState({});\n\n  // Fetch courses when component mounts\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5050/?userId=${userId}`);\n        if (response.data && response.data.length > 0) {\n          setCourses(response.data);\n          // Set the first course as default selected\n          setSelectedCourseId(response.data[0].CourseID);\n        } else {\n          setError('No courses found for this user');\n        }\n      } catch (err) {\n        console.error('Error fetching courses:', err);\n        setError('Failed to load courses');\n      }\n    };\n\n    fetchCourses();\n  }, [userId]);\n\n  // this function will calculate the projected cumulative grade based on hypothetical entry\n  const calculateWhatIf = (typeToCalculate = null) => { \n    const results = {};\n    \n    // Calculate for each what-if scenario\n    whatIfEntries.forEach(entry => {\n      let newCumulative = 0;\n      \n      // weights are handled based on assessment type\n      Object.values(courseData.weights).forEach(group => {\n        let avg = 0;\n\n        let grades = [...group.grades];\n\n        // add all hypothetical grades of this type\n        whatIfEntries\n          .filter(e => e.type === group.type)\n          .forEach(e => grades.push(Number(e.grade)));\n\n        // calculate average for assessment type\n        if (grades.length > 0) {\n          avg = grades.reduce((sum, g) => sum + g, 0) / grades.length;\n        }\n\n        // add weighted average to find new cumulative\n        newCumulative += avg * (group.percentage / 100);\n      });\n\n      results[entry.id] = newCumulative.toFixed(2);\n    });\n\n    // Also calculate for current form values if specified\n    if (typeToCalculate && currentWhatIf.grade !== \"\") {\n      let newCumulative = 0;\n      \n      Object.values(courseData.weights).forEach(group => {\n        let avg = 0;\n        let grades = [...group.grades];\n\n        // add all hypothetical grades including current form\n        whatIfEntries\n          .filter(e => e.type === group.type)\n          .forEach(e => grades.push(Number(e.grade)));\n        \n        if (group.type === typeToCalculate) {\n          grades.push(Number(currentWhatIf.grade));\n        }\n\n        if (grades.length > 0) {\n          avg = grades.reduce((sum, g) => sum + g, 0) / grades.length;\n        }\n\n        newCumulative += avg * (group.percentage / 100);\n      });\n\n      setWhatIfResults({\n        ...results,\n        preview: newCumulative.toFixed(2)\n      });\n    } else {\n      setWhatIfResults(results);\n    }\n  };\n\n  // Validate and set numerical grade input\n  const handleGradeChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers, empty string, or single decimal point\n    if (value === '' || /^[0-9]*\\.?[0-9]*$/.test(value)) {\n      setCurrentWhatIf({...currentWhatIf, grade: value});\n      setGradeError('');\n    } else {\n      setGradeError('Please enter a numerical value!');\n    }\n  };\n\n  // Add new what-if scenario\n  const addWhatIfEntry = () => {\n    if (currentWhatIf.type && currentWhatIf.grade) {\n      const newEntry = {\n        id: Date.now(),\n        type: currentWhatIf.type,\n        grade: currentWhatIf.grade\n      };\n      setWhatIfEntries([...whatIfEntries, newEntry]);\n      setCurrentWhatIf({ type: '', grade: '' });\n    }\n  };\n\n  // Remove what-if scenario\n  const removeWhatIfEntry = (id) => {\n    setWhatIfEntries(whatIfEntries.filter(entry => entry.id !== id));\n  };\n\n  // Handle course selection change\n  const handleCourseChange = (e) => {\n    const courseId = parseInt(e.target.value);\n    setSelectedCourseId(courseId);\n    // Reset what-if states when changing courses\n    setWhatIfEntries([]);\n    setCurrentWhatIf({ type: '', grade: '' });\n    setWhatIfResults({});\n  };\n\n  // Fetch course data when selectedCourseId changes\n  useEffect(() => {\n    if (!selectedCourseId) return;\n    \n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n       \n        // fetch course details and assessments\n        const [courseRes, assessmentsRes] = await Promise.all([\n          axios.get(`http://localhost:5050/api/courses/${selectedCourseId}?userId=${userId}`),\n          axios.get(`http://localhost:5050/api/courses/${selectedCourseId}/assessments?userId=${userId}`)\n        ]);\n\n        // verify valid data\n        if (!courseRes.data) {\n          throw new Error('No course data found');\n        }\n\n        // If no assessments found, handle gracefully\n        const assessments = assessmentsRes.data || [];\n\n        // calculate weighted average properly\n        const weightGroups = assessments.reduce((groups, assessment) => {\n          if (!groups[assessment.WeightID]) {\n            groups[assessment.WeightID] = {\n              type: assessment.AssessmentType,\n              percentage: Number(assessment.WeightPercentage),\n              grades: []\n            };\n          }\n          // ensure grade is treated as a number, not string\n          const grade = Number(assessment.IndividualGrade);\n          if (!isNaN(grade)) {\n            groups[assessment.WeightID].grades.push(grade);\n          }\n          return groups;\n        }, {});\n\n        // calculate type averages\n        const typeAverages = assessments.reduce((averages, assessment) => {\n          const grade = Number(assessment.IndividualGrade);\n          if (!isNaN(grade)) {\n            if (!averages[assessment.AssessmentType]) {\n              averages[assessment.AssessmentType] = { total: 0, count: 0 };\n            }\n            averages[assessment.AssessmentType].total += grade;\n            averages[assessment.AssessmentType].count++;\n          }\n          return averages;\n        }, {});\n\n        // calculate final grade\n        let cumulativeGrade = 0;\n        Object.values(weightGroups).forEach(group => {\n          if (group.grades.length > 0) {\n            const categoryAvg = group.grades.reduce((sum, grade) => sum + grade, 0) / group.grades.length;\n            cumulativeGrade += categoryAvg * (group.percentage / 100);\n          }\n        });\n\n        // update state\n        setCourseData({\n          details: courseRes.data,\n          assessments: assessments,\n          weights: weightGroups,\n          typeAverages: Object.fromEntries(\n            Object.entries(typeAverages).map(([type, {total, count}]) =>\n              [type, (total / count).toFixed(2)]\n            )\n          ),\n          cumulativeGrade: cumulativeGrade.toFixed(2)\n        });\n\n      } catch (err) {\n        console.error('Error:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [userId, selectedCourseId]);\n\n  useEffect(() => {\n    calculateWhatIf(currentWhatIf.type);\n  }, [whatIfEntries, currentWhatIf.type, currentWhatIf.grade, courseData]);\n\n  // Show loading when fetching initial course list\n  if (loading && !selectedCourseId) return <div style={{ padding: '20px', textAlign: 'center' }}>Loading courses...</div>;\n  if (error && !selectedCourseId) return <div style={{ color: 'red', padding: '20px' }}>Error: {error}</div>;\n  if (courses.length === 0) return <div style={{ padding: '20px', textAlign: 'center' }}>No courses available</div>;\n\n  // main component being rendered\n  return (\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px', fontFamily: 'Arial' }}>\n      {/* Course Selection Dropdown */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"courseSelect\" style={{ marginRight: '10px', fontWeight: 'bold' }}>Select Course: </label>\n        <select \n          id=\"courseSelect\"\n          value={selectedCourseId || ''}\n          onChange={handleCourseChange}\n          style={{\n            padding: '8px 12px',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n            fontSize: '16px',\n            backgroundColor: '#fff',\n            width: '300px'\n          }}\n        >\n          {courses.map(course => (\n            <option key={course.CourseID} value={course.CourseID}>\n              {course.CourseName} - {course.Instructor} ({course.Semester} {course.Year})\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Loading state while fetching course data */}\n      {selectedCourseId && loading && <div style={{ padding: '20px', textAlign: 'center' }}>Loading grades...</div>}\n      \n      {/* Error state */}\n      {selectedCourseId && error && <div style={{ color: 'red', padding: '20px' }}>Error: {error}</div>}\n      \n      {/* If no course data is available or still loading */}\n      {selectedCourseId && !loading && !courseData.details && <div>No course data available</div>}\n\n      {/* Course content - only show when data is loaded */}\n      {selectedCourseId && !loading && courseData.details && (\n        <>\n          {/* Course Header */}\n          <div style={{\n            backgroundColor: '#f5c978',\n            padding: '15px',\n            borderRadius: '5px',\n            marginBottom: '20px'\n          }}>\n            <h2>{courseData.details.CourseName}</h2>\n            <p>Instructor: {courseData.details.Instructor}</p>\n            <p>Semester: {courseData.details.Semester} {courseData.details.Year}</p>\n            <div style={{\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              padding: '10px',\n              borderRadius: '5px',\n              display: 'inline-block'\n            }}>\n              <strong>Cumulative Grade: {courseData.cumulativeGrade}%</strong>\n            </div>\n          </div>\n\n          {/* Assessments Table - only show if there are assessments */}\n          {courseData.assessments.length > 0 ? (\n            <table style={{\n              width: '100%',\n              borderCollapse: 'collapse',\n              marginBottom: '30px'\n            }}>\n              <thead>\n                <tr style={{ backgroundColor: '#4CAF50', color: 'white' }}>\n                  <th style={{ padding: '12px', textAlign: 'left' }}>Assessment</th>\n                  <th style={{ padding: '12px', textAlign: 'center' }}>Type</th>\n                  <th style={{ padding: '12px', textAlign: 'center' }}>Weight</th>\n                  <th style={{ padding: '12px', textAlign: 'center' }}>Grade</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* list of assessments and their grades */}\n                {courseData.assessments.map((assessment, index) => (\n                  <tr\n                    key={assessment.AssessmentID}\n                    style={{\n                      borderBottom: '1px solid #ddd',\n                      backgroundColor: index % 2 === 0 ? '#f9f9f9' : 'white'\n                    }}\n                  >\n                    <td style={{ padding: '12px' }}>{assessment.AssessmentName}</td>\n                    <td style={{ padding: '12px', textAlign: 'center' }}>{assessment.AssessmentType}</td>\n                    <td style={{ padding: '12px', textAlign: 'center' }}>{assessment.WeightPercentage}%</td>\n                    <td style={{\n                      padding: '12px',\n                      textAlign: 'center',\n                      color: assessment.IndividualGrade >= 90 ? '#4CAF50' :\n                            assessment.IndividualGrade >= 80 ? '#FFC107' : '#F44336'\n                    }}>\n                      {assessment.IndividualGrade}%\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <div style={{ \n              padding: '15px', \n              backgroundColor: '#f8f9fa', \n              borderRadius: '5px', \n              marginBottom: '20px',\n              textAlign: 'center'\n            }}>\n              No assessments available for this course yet\n            </div>\n          )}\n\n          {/* Weight Breakdown - only show if there are weights */}\n          {Object.keys(courseData.weights).length > 0 && (\n            <div style={{\n              backgroundColor: '#f5c978',\n              padding: '15px',\n              borderRadius: '5px'\n            }}>\n              {/* Displays grade average for each assessment type */}\n              <h3>Grade Composition</h3>\n              {Object.entries(courseData.weights).map(([weightId, weight]) => {\n                const avg = weight.grades.length > 0\n                  ? (weight.grades.reduce((a, b) => a + b, 0) / weight.grades.length).toFixed(2)\n                  : 'N/A';\n                return (\n                  <div key={weightId} style={{ marginBottom: '10px' }}>\n                    <strong>{weight.type}s:</strong> {avg}% (Weight: {weight.percentage}%)\n                    <div style={{\n                      height: '10px',\n                      backgroundColor: '#ddd',\n                      borderRadius: '5px',\n                      marginTop: '5px'\n                    }}>\n                      <div\n                        style={{\n                          width: `${weight.percentage}%`,\n                          height: '100%',\n                          backgroundColor: '#4CAF50',\n                          borderRadius: '5px'\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n\n          {/* What-If Calculator - only show if there are weights */}\n          {Object.keys(courseData.weights).length > 0 && (\n            <div style={{\n              backgroundColor: '#f5c978',\n              padding: '15px',\n              borderRadius: '5px',\n              marginTop: '20px',\n              marginBottom: '30px',\n              border: '1px solid #ffeeba'\n            }}>\n              {/* Below the calculated average, I have placed the what-if calculator here */}\n              <h3>What-If Grade Calculator</h3>\n              \n              {/* Current what-if input */}\n              <div style={{ display: 'flex', gap: '10px', alignItems: 'center', marginBottom: '15px' }}>\n                <label htmlFor=\"type\">Assessment Type:</label>\n                <select\n                  id=\"type\"\n                  value={currentWhatIf.type}\n                  onChange={e => setCurrentWhatIf({...currentWhatIf, type: e.target.value})}\n                >\n                  <option value=\"\">--Select Type--</option>\n                  {Object.values(courseData.weights).map(group => (\n                    <option key={group.type} value={group.type}>\n                      {group.type}\n                    </option>\n                  ))}\n                </select>\n\n                <label htmlFor=\"grade\">Hypothetical Grade:</label>\n                <input\n                  id=\"grade\"\n                  type=\"text\"  // Changed to text to handle input more precisely\n                  value={currentWhatIf.grade}\n                  onChange={handleGradeChange}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"Enter %\"\n                  pattern=\"[0-9]*\"  // HTML5 pattern for numbers only\n                  inputMode=\"numeric\"  // Shows numeric keyboard on mobile\n                />\n\n                {/* Error message goes here */}\n                {gradeError && (\n                  <span style={{ color: 'red', marginLeft: '10px', fontSize: '0.9em' }}>\n                    {gradeError}\n                  </span>\n                )}\n                \n                <button\n                  onClick={addWhatIfEntry}\n                  style={{\n                    background: '#4CAF50',\n                    color: 'white',\n                    padding: '5px 10px',\n                    border: 'none',\n                    borderRadius: '3px',\n                    cursor: 'pointer'\n                  }}\n                  disabled={!currentWhatIf.type || !currentWhatIf.grade || gradeError}\n                >\n                  Add Scenario\n                </button> \n              </div>\n              \n              {/* List of active what-if scenarios */}\n              {whatIfEntries.length > 0 && (\n                <div style={{ marginBottom: '15px' }}>\n                  <h4>Active Scenarios:</h4>\n                  <ul style={{ listStyle: 'none', padding: 0 }}>\n                    {whatIfEntries.map(entry => (\n                      <li key={entry.id} style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        padding: '8px',\n                        backgroundColor: '#f8f9fa',\n                        marginBottom: '5px',\n                        borderRadius: '4px'\n                      }}>\n                        <span>{entry.type}: {entry.grade}%</span>\n                        <button\n                          onClick={() => removeWhatIfEntry(entry.id)}\n                          style={{\n                            background: '#dc3545',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '3px',\n                            padding: '2px 6px',\n                            cursor: 'pointer'\n                          }}\n                        >\n                          Remove\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              {/* display projected cumulative */}\n              {whatIfResults.preview && (\n                <div style={{\n                  marginTop: '15px',\n                  padding: '10px',\n                  backgroundColor: '#d1ecf1',\n                  borderRadius: '5px',\n                  color: '#0c5460'\n                }}>\n                  <strong>Preview Projected Grade:</strong> {whatIfResults.preview}%\n                </div>\n              )}\n              \n              {whatIfEntries.length > 0 && (\n                <div style={{\n                  marginTop: '15px',\n                  padding: '10px',\n                  backgroundColor: '#d4edda',\n                  borderRadius: '5px',\n                  color: '#155724'\n                }}>\n                  <strong>Combined Projected Grade:</strong> {whatIfResults[whatIfEntries[whatIfEntries.length-1]?.id] || '0'}%\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CourseGrades;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}